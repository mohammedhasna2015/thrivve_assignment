// Mocks generated by Mockito 5.4.4 from annotations
// in thrivve_assignment/test/features/withdraw/domain/repository/withdraw_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:thrivve_assignment/features/withdraw/data/data_soruces/i_withdraw_datasource.dart'
    as _i3;
import 'package:thrivve_assignment/features/withdraw/data/models/payment_model.dart'
    as _i5;
import 'package:thrivve_assignment/features/withdraw/data/models/withdraw_confirm_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWithdrawConfirmModel_0 extends _i1.SmartFake
    implements _i2.WithdrawConfirmModel {
  _FakeWithdrawConfirmModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IWithdrawDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIWithdrawDataSource extends _i1.Mock
    implements _i3.IWithdrawDataSource {
  MockIWithdrawDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.PaymentModel>> listPayment() => (super.noSuchMethod(
        Invocation.method(
          #listPayment,
          [],
        ),
        returnValue:
            _i4.Future<List<_i5.PaymentModel>>.value(<_i5.PaymentModel>[]),
      ) as _i4.Future<List<_i5.PaymentModel>>);

  @override
  _i4.Future<_i2.WithdrawConfirmModel> confirmWithDraw() => (super.noSuchMethod(
        Invocation.method(
          #confirmWithDraw,
          [],
        ),
        returnValue: _i4.Future<_i2.WithdrawConfirmModel>.value(
            _FakeWithdrawConfirmModel_0(
          this,
          Invocation.method(
            #confirmWithDraw,
            [],
          ),
        )),
      ) as _i4.Future<_i2.WithdrawConfirmModel>);
}
